name: Deploy to Test Environment

on:
  push:
    branches:
      - develop

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: currency-converter-backend
  ECS_SERVICE: currency-converter-service-test
  ECS_CLUSTER: currency-converter-cluster
  ECS_TASK_DEFINITION: currency-converter-service 
  CONTAINER_NAME: currency-converter-backend

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionRole-Test 
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2 

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        IMAGE_TAG=$(echo "${{ github.sha }}" | cut -c1-7)
        docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${IMAGE_TAG} .
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${IMAGE_TAG}
        echo "image=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${IMAGE_TAG}" >> $GITHUB_OUTPUT

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} --query taskDefinition > task-definition.json

    - name: Clean up the task definition file
      run: |
        jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy, .tags, .enableEcsManagedTags, .deregisteredAt)' task-definition.json > task-definition-clean.json

    - name: Fill in new image ID in the task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1 
      with:
        task-definition: task-definition-clean.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true